#--
# Configuration for ORNL Crusher/Frontier/Borg
#--

[omnistat.collectors]

port = 8001
enable_rocm_smi = True
enable_amd_smi = False
enable_ras_ecc = True
enable_rms = True
enable_rocprofiler = False
enable_network = True
enable_vendor_counters = True

## Path to local ROCM install to access SMI library
rocm_path = /opt/rocm-6.4.1

## List of IPs allowed to query the collector (comma separated). By
## default, access will be restricted to the localhost (127.0.0.1).
## Expand this value to include IP of local Prometheus server.
allowed_ips = 127.0.0.1, 0.0.0.0

[omnistat.collectors.rms]

host_skip = "login.*"
enable_annotations = True

[omnistat.collectors.rocprofiler]
profile = default

## Collect the number of free-running GPU cycles and the number of GPU active
## cycles.
[omnistat.collectors.rocprofiler.default]
sampling_mode = constant
counters = ["GRBM_COUNT", "GRBM_GUI_ACTIVE"]

## Collect total number of bytes read from and written to HBM.
[omnistat.collectors.rocprofiler.hbm]
sampling_mode = constant
counters = ["FETCH_SIZE", "WRITE_SIZE"]

## Collect instruction counters to calculate FLOPS on MI250 GPUs.
##
## A complete FLOPS calculation requires monitoring 16 distinct counters. Since
## MI250s can sample a maximum of 8 SQ counters at any given time, the counters
## are divided into two sets:
##  - Set 1: FP64 vector and FP32 vector instructions
##  - Set 2: FP16 vector and all matrix instructions
##
## The two counter sets are cyclically assigned to different GPU IDs in each
## node, allowing to monitor all counters simultaneously:
##  - GPU IDs 0, 2, 4, 6 are assigned Set 1
##  - GPU IDs 1, 3, 5, 7 are assigned Set 2
[omnistat.collectors.rocprofiler.flops_gpuid]
sampling_mode = gpu-id
counters = [
        [
            "SQ_INSTS_VALU_ADD_F64", "SQ_INSTS_VALU_MUL_F64",
            "SQ_INSTS_VALU_TRANS_F64", "SQ_INSTS_VALU_FMA_F64",
            "SQ_INSTS_VALU_ADD_F32", "SQ_INSTS_VALU_MUL_F32",
            "SQ_INSTS_VALU_TRANS_F32", "SQ_INSTS_VALU_FMA_F32"
        ],
        [
            "SQ_INSTS_VALU_ADD_F16", "SQ_INSTS_VALU_MUL_F16",
            "SQ_INSTS_VALU_TRANS_F16", "SQ_INSTS_VALU_FMA_F16",
            "SQ_INSTS_VALU_MFMA_MOPS_F64", "SQ_INSTS_VALU_MFMA_MOPS_F32",
            "SQ_INSTS_VALU_MFMA_MOPS_F16", "SQ_INSTS_VALU_MFMA_MOPS_BF16"
        ]
    ]

## Collect instruction counters to calculate FLOPS on MI250 GPUs.
##
## Same as "flops_gpuid", but instead of assigning the two counter sets to
## different GPU IDs, alternates counter sets on every sample:
##  - Sample 0: Set 1
##  - Sample 1: Set 2
##  - Sample 2: Set 1
##  - Sample 3: Set 2
##  - ...
[omnistat.collectors.rocprofiler.flops_periodic]
sampling_mode = periodic
counters = [
        [
            "SQ_INSTS_VALU_ADD_F64", "SQ_INSTS_VALU_MUL_F64",
            "SQ_INSTS_VALU_TRANS_F64", "SQ_INSTS_VALU_FMA_F64",
            "SQ_INSTS_VALU_ADD_F32", "SQ_INSTS_VALU_MUL_F32",
            "SQ_INSTS_VALU_TRANS_F32", "SQ_INSTS_VALU_FMA_F32"
        ],
        [
            "SQ_INSTS_VALU_ADD_F16", "SQ_INSTS_VALU_MUL_F16",
            "SQ_INSTS_VALU_TRANS_F16", "SQ_INSTS_VALU_FMA_F16",
            "SQ_INSTS_VALU_MFMA_MOPS_F64", "SQ_INSTS_VALU_MFMA_MOPS_F32",
            "SQ_INSTS_VALU_MFMA_MOPS_F16", "SQ_INSTS_VALU_MFMA_MOPS_BF16"
        ]
    ]

[omnistat.query]

prometheus_url = http://localhost:9090
system_name = ORNL Frontier


#--
# User-mode Settings
#--

[omnistat.usermode]

victoria_binary = /sw/frontier/amdsw/omnistat//victoria-metrics-linux-amd64-v1.109.0/victoria-metrics-prod
victoria_datadir = /lustre/orion/%(SLURM_JOB_ACCOUNT)s/scratch/%(USER)s/omnistat/%(SLURM_JOB_ID)s
victoria_logfile = vic_server.log

#victoria_datadir = /tmp/omnistat/%(SLURM_JOB_ID)s
#victoria_datadir = /lustre/orion/%(SLURM_JOB_ACCOUNT)s/world-shared/omnistat/%(SLURM_JOB_ID)s


prometheus_binary = /sw/frontier/amdsw/omnistat/prometheus-2.45.1.linux-amd64/prometheus
prometheus_datadir = /lustre/orion/%(SLURM_JOB_ACCOUNT)s/scratch/%(USER)s/omnistat/%(SLURM_JOB_ID)s
prometheus_logfile = prom_server.log

## Bind user-mode Omnistat monitor and VictoriaMetrics to specific cores.
## Requires numactl. When these options are not set, no binding is enforced.
##
## Note: you can also control these settings via environment variables:
## OMNISTAT_EXPORTER_COREBINDING, OMNISTAT_VICTORIA_COREBINDING

#exporter_corebinding = 0
#victoria_corebinding = 95

## SSH key to launch user-mode Omnistat. For backward compatibility with
## older versions of Omnistat; no longer needed with v1.5 or later.
ssh_key = ~/.ssh/id_rsa
