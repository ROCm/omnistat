[omnistat.collectors]

port = 8001
enable_rocm_smi = True
enable_amd_smi = False
enable_ras_ecc = True
enable_rms = False
enable_rocprofiler = False
enable_network = True
enable_vendor_counters = False

## Path to local ROCM install to access SMI library
rocm_path = /opt/rocm

## List of IPs allowed to query the collector (comma separated). By
## default, access will be restricted to the localhost (127.0.0.1).
## Expand this value to include IP of local Prometheus server.
allowed_ips = 127.0.0.1

[omnistat.collectors.rms]

host_skip = "login.*"
enable_annotations = False
job_detection_mode = file-based
job_detection_file = /tmp/omni_rmsjobinfo

[omnistat.collectors.rocprofiler]
profile = default

## Collect the number of free-running GPU cycles and the number of GPU active
## cycles. Both counters are collected from all GPUs on every sample.
[omnistat.collectors.rocprofiler.default]
sampling_mode = constant
counters = ["GRBM_COUNT", "GRBM_GUI_ACTIVE"]

## Collect total number of bytes read from and written to HBM. Both counters
## are collected from all GPUs on every sample. Sampling these counters at the
## same time is possible on MI2xx (gfx90a) GPUs.
[omnistat.collectors.rocprofiler.hbm_gfx90a]
sampling_mode = constant
counters = ["FETCH_SIZE", "WRITE_SIZE"]

## Collect total number of bytes read from and written to HBM. Cyclically
## assign the two counters to different GPU IDs.
##  - GPU IDs 0, 2... sample FETCH_SIZE
##  - GPU IDs 1, 3... sample WRITE_SIZE
## Requires at least 2 GPUs per node.
[omnistat.collectors.rocprofiler.hbm_gpuid]
sampling_mode = gpu-id
counters = [["FETCH_SIZE"], ["WRITE_SIZE"]]

## Collect total number of bytes read from and written to HBM. Alternate
## between counters on every sample.
##  - Sample 0: FETCH_SIZE
##  - Sample 1: WRITE_SIZE
##  - Sample 2: FETCH_SIZE
##  - Sample 3: WRITE_SIZE
##  - ...
[omnistat.collectors.rocprofiler.hbm_periodic]
sampling_mode = periodic
counters = [["FETCH_SIZE"], ["WRITE_SIZE"]]

[omnistat.query]

prometheus_url = http://localhost:9090
system_name = My Snazzy System


#--
# User-mode Settings
#--

[omnistat.usermode]

# settings for pushing data to external victoria-metrics instance (enabled via external_victoria = True)

external_victoria = False
external_victoria_endpoint = victoria.endpoint.org
external_victoria_port = 8440
# external_proxy=http://proxy.myorg.org:3128/

# settings when spinning up a local victoria-metrics instance within a job (enabled via external_victoria = False)

victoria_binary = /path-to-victoria-metrics-install/victoria-metrics-prod
victoria_datadir = data_prom
victoria_logfile = vic_server.log


## Bind user-mode Omnistat monitor and VictoriaMetrics to specific cores.
## Requires numactl. When these options are not set, no binding is enforced.
##
## Note: you can also control these settings via environment variables:
## OMNISTAT_EXPORTER_COREBINDING, OMNISTAT_VICTORIA_COREBINDING

# exporter_corebinding = 0
# victoria_corebinding = 1

## SSH key to launch user-mode Omnistat. For backward compatibility with
## older versions of Omnistat; no longer needed with v1.5 or later.
ssh_key = ~/.ssh/id_rsa
